#include <Arduino.h>

#if CONFIG_FREERTOS_UNICORE
static const BaseType_t app_cpu = 0;
#else
static const BaseType_t app_cpu = 1;
#endif

void testTask(void *params)
{
    while (1)
    {
        int a = 1;
        int b[100];

        for (int i = 0; i < 100; i++)
        {
            b[i] = a + 1;
        }
        Serial.println(b[0]);
        Serial.print("High water mark (words):\t");
        Serial.println(uxTaskGetStackHighWaterMark(NULL));

        Serial.print("heap before malloc (bytes):\t");
        Serial.println(xPortGetFreeHeapSize());

        int *ptr = (int *)pvPortMalloc(1024 * sizeof(int));
        if (ptr != NULL)
        {
            for (int i = 0; i < 1024; i++)
            {
                ptr[i] = 3;
            }
        }
        else
        {
            Serial.println("not enough heap!!!");
        }

        Serial.print("heap after malloc (bytes):\t");
        Serial.println(xPortGetFreeHeapSize());
        vPortFree(ptr);
        vTaskDelay(200 / portTICK_PERIOD_MS);
    }
}

void setup()
{
    Serial.begin(115200);
    vTaskDelay(1000 / portTICK_PERIOD_MS);
    Serial.println();

    xTaskCreatePinnedToCore(
        testTask,
        "test task",
        1200,
        NULL,
        1,
        NULL,
        app_cpu);

    vTaskDelete(NULL);
}

void loop()
{
}
