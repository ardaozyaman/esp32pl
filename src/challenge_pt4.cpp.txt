#include <Arduino.h>

#if CONFIG_FREERTOS_UNICORE
static const BaseType_t app_core = 0;
#else
static const BaseType_t app_core = 1;
#endif

// task handles
static TaskHandle_t handle_a;
static TaskHandle_t handle_b;

// que lenghts
static const uint8_t que_1_len = 5;
static const uint8_t que_2_len = 5;
// que handles
static QueueHandle_t que_1;
static QueueHandle_t que_2;

void checkCmd_d(char c)
{
    static const char cmd_d[] = "delay-";
    static u_int8_t index = 0;
    static bool digit_Flag = false;
    static u_int8_t digit_index = 0;
    static char delayValue[10];
    if (c == cmd_d[index++])
    {
        if (cmd_d[index] == '\0')
        {
            digit_Flag = true;
            index = 0;
        }
    }
    else if (digit_Flag && isdigit(c))
    {
        delayValue[digit_index++] = c;
    }
    else if (digit_Flag && c == '\r')
    {
        uint16_t ledDelay = atoi(delayValue);
        if (xQueueSend(que_1, (void *)&ledDelay, 0) == pdTRUE)
        {
        }
        Serial.println("led blinks -> " + String(ledDelay));
        memset(delayValue, 0, sizeof(delayValue));
    }
    else
    {
        index = 0;
        digit_index = 0;
        digit_Flag = false;
    }
}

void taskA(void *params)
{
    char c;
    volatile uint8_t i_cmd = 0;
    static char recieved_que2[29];
    while (1)
    {
        if (xQueueReceive(que_2, (void *)&recieved_que2, 0) == pdTRUE)
        {
            Serial.println(recieved_que2);
        }
        if (Serial.available() > 0)
        {
            c = Serial.read();
            Serial.print(c);
            checkCmd_d(c);
        }
    }
}

void taskB(void *params)
{
    static uint16_t delay = 0;
    static int recieved_msg = 0;
    static int blink_cnt = 0;
    static const char msg[] = " <- times blinked";
    while (1)
    {
        if (xQueueReceive(que_1, (void *)&delay, 0) == pdTRUE)
        {
            recieved_msg++;
        }

        if (recieved_msg > 0 && delay > 5)
        {
            digitalWrite(LED_BUILTIN, 1);
            vTaskDelay(delay / portTICK_PERIOD_MS);
            digitalWrite(LED_BUILTIN, 0);
            vTaskDelay(delay / portTICK_PERIOD_MS);
            blink_cnt++;
            if (blink_cnt % 100 == 0)
            {
                char blink_cnt_str[29];
                itoa(blink_cnt, blink_cnt_str, 10);
                strcat(blink_cnt_str,msg);
                if (xQueueSend(que_2, (void *)&blink_cnt_str, 0) == pdTRUE)
                {
                    // TO DO ?
                }
            }
        }
    }
}

void setup()
{
    Serial.begin(115200);
    pinMode(LED_BUILTIN, OUTPUT);

    que_1 = xQueueCreate(que_1_len, sizeof(uint16_t));
    que_2 = xQueueCreate(que_2_len, sizeof(char[29]));

    xTaskCreatePinnedToCore(
        taskA,
        "task A",
        1024,
        NULL,
        1,
        NULL,
        app_core);
    xTaskCreatePinnedToCore(
        taskB,
        "task A",
        1024,
        NULL,
        1,
        NULL,
        app_core);
}

void loop()
{
}